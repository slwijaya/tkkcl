name: Deploy Go Microservices to GCP VM

on:
  push:
    branches: [main]     # Trigger on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: third-project-467207
      REGISTRY: asia-southeast2-docker.pkg.dev/third-project-467207/docker-asia-v2
      VM_HOST: ${{ secrets.VM_HOST }}
      VM_USER: ${{ secrets.VM_USER }}
      VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

    # Build & Push Auth Service
    - name: Build & Push Auth Service
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 \
          -t ${{ env.REGISTRY }}/auth-service:latest ./tokokecil-ddd/auth-service --push

    # Build & Push Gateway Service
    - name: Build & Push Gateway Service
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 \
          -t ${{ env.REGISTRY }}/gateway-service:latest ./gateway-service --push

    # Deploy to VM via SSH
    - name: Deploy to GCP VM via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.VM_HOST }}
        username: ${{ env.VM_USER }}
        key: ${{ env.VM_SSH_KEY }}
        script: |
          # Login to Artifact Registry
          gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

          # Pull latest images
          docker pull ${{ env.REGISTRY }}/auth-service:latest
          docker pull ${{ env.REGISTRY }}/gateway-service:latest

          # Stop and remove existing containers
          docker rm -f auth-service || true
          docker rm -f gateway-service || true

          # Start containers with docker-compose (assume compose file exists)
          docker-compose up -d

          # Prune unused images
          docker image prune -af || true
